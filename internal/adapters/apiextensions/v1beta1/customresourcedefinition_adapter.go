// Code generated by Kubegraph; DO NOT EDIT.

package v1beta1

import (
	"fmt"
	"reflect"

	"github.com/wwmoraes/kubegraph/internal/registry"
	apiExtensionsV1beta1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1"
)

// CustomResourceDefinitionObject alias for apiExtensionsV1beta1.CustomResourceDefinition
type CustomResourceDefinitionObject = apiExtensionsV1beta1.CustomResourceDefinition

// CustomResourceDefinitionAdapterObjectType reflected type of *apiExtensionsV1beta1.CustomResourceDefinition
var CustomResourceDefinitionAdapterObjectType = reflect.TypeOf((*apiExtensionsV1beta1.CustomResourceDefinition)(nil))

// GetCustomResourceDefinitionAdapter retrieves *CustomResourceDefinitionAdapter from the registry
func GetCustomResourceDefinitionAdapter() (*CustomResourceDefinitionAdapter, error) {
	adapter, err := registry.GetAdapter[*apiExtensionsV1beta1.CustomResourceDefinition]()
	if err != nil {
		return nil, err
	}
	casted, ok := adapter.(*CustomResourceDefinitionAdapter)
	if !ok {
		return nil, fmt.Errorf("unable get adapter: %w", registry.ErrIncompatibleType)
	}
	return casted, nil
}

// CustomResourceDefinitionAdapter implements an adapter for apiExtensionsV1beta1.CustomResourceDefinition
type CustomResourceDefinitionAdapter struct {
	registry.Adapter
}

// CastObject casts a runtime.Object to *apiExtensionsV1beta1.CustomResourceDefinition
func (this *CustomResourceDefinitionAdapter) CastObject(obj registry.RuntimeObject) (*apiExtensionsV1beta1.CustomResourceDefinition, error) {
	casted, ok := obj.(*apiExtensionsV1beta1.CustomResourceDefinition)
	if !ok {
		return casted, fmt.Errorf("unable convert object: %w", registry.ErrIncompatibleType)
	}

	return casted, nil
}

// GetGraphObjects returns a map of all *apiExtensionsV1beta1.CustomResourceDefinition
// nodes stored on a graph
func (this *CustomResourceDefinitionAdapter) GetGraphObjects(statefulGraph registry.StatefulGraph) (map[string]*apiExtensionsV1beta1.CustomResourceDefinition, error) {
	objects, err := statefulGraph.GetObjects(CustomResourceDefinitionAdapterObjectType)
	if err != nil {
		return nil, err
	}

	castedObjects := make(map[string]*apiExtensionsV1beta1.CustomResourceDefinition, len(objects))
	for key, object := range objects {
		casted, ok := object.(*apiExtensionsV1beta1.CustomResourceDefinition)
		if !ok {
			return nil, fmt.Errorf("unable convert object: %w", registry.ErrIncompatibleType)
		}
		castedObjects[key] = casted
	}
	return castedObjects, nil
}

// GetGraphNode returns the node value representing a *apiExtensionsV1beta1.CustomResourceDefinition
func (this *CustomResourceDefinitionAdapter) GetGraphNode(statefulGraph registry.StatefulGraph, name string) (registry.Node, error) {
	return statefulGraph.GetNode(CustomResourceDefinitionAdapterObjectType, name)
}

func (this *CustomResourceDefinitionAdapter) AddStyledNode(graph registry.StatefulGraph, obj registry.RuntimeObject) (registry.Node, error) {
	resource, err := this.CastObject(obj)
	if err != nil {
		return nil, err
	}

	name := fmt.Sprintf("%s.%s~%s", resource.APIVersion, resource.Kind, resource.Name)
	return graph.AddStyledNode(this.GetType(), obj, name, resource.Name, "icons/crd.svg")
}

// init registers CustomResourceDefinitionAdapter
func init() {
	registry.MustRegister(&CustomResourceDefinitionAdapter{
		registry.NewAdapter(
			CustomResourceDefinitionAdapterObjectType,
			"icons/crd.svg",
		),
	})
}
