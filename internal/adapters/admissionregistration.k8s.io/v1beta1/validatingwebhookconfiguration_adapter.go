// Code generated by Kubegraph; DO NOT EDIT.

package v1beta1

import (
	"fmt"
	"reflect"

	"github.com/wwmoraes/kubegraph/internal/registry"
	admissionregistrationV1beta1 "k8s.io/api/admissionregistration/v1beta1"
)

// ValidatingWebhookConfigurationObject alias for admissionregistrationV1beta1.ValidatingWebhookConfiguration
type ValidatingWebhookConfigurationObject = admissionregistrationV1beta1.ValidatingWebhookConfiguration

// ValidatingWebhookConfigurationAdapterObjectType reflected type of *admissionregistrationV1beta1.ValidatingWebhookConfiguration
var ValidatingWebhookConfigurationAdapterObjectType = reflect.TypeOf((*admissionregistrationV1beta1.ValidatingWebhookConfiguration)(nil))

// GetValidatingWebhookConfigurationAdapter retrieves *ValidatingWebhookConfigurationAdapter from the registry
func GetValidatingWebhookConfigurationAdapter() (*ValidatingWebhookConfigurationAdapter, error) {
	adapter, err := registry.GetAdapter[*admissionregistrationV1beta1.ValidatingWebhookConfiguration]()
	if err != nil {
		return nil, err
	}
	casted, ok := adapter.(*ValidatingWebhookConfigurationAdapter)
	if !ok {
		return nil, fmt.Errorf("unable get adapter: %w", registry.ErrIncompatibleType)
	}
	return casted, nil
}

// ValidatingWebhookConfigurationAdapter implements an adapter for admissionregistrationV1beta1.ValidatingWebhookConfiguration
type ValidatingWebhookConfigurationAdapter struct {
	registry.Adapter
}

// CastObject casts a runtime.Object to *admissionregistrationV1beta1.ValidatingWebhookConfiguration
func (this *ValidatingWebhookConfigurationAdapter) CastObject(obj registry.RuntimeObject) (*admissionregistrationV1beta1.ValidatingWebhookConfiguration, error) {
	casted, ok := obj.(*admissionregistrationV1beta1.ValidatingWebhookConfiguration)
	if !ok {
		return casted, fmt.Errorf("unable convert object: %w", registry.ErrIncompatibleType)
	}

	return casted, nil
}

// GetGraphObjects returns a map of all *admissionregistrationV1beta1.ValidatingWebhookConfiguration
// nodes stored on a graph
func (this *ValidatingWebhookConfigurationAdapter) GetGraphObjects(statefulGraph registry.StatefulGraph) (map[string]*admissionregistrationV1beta1.ValidatingWebhookConfiguration, error) {
	objects, err := statefulGraph.GetObjects(ValidatingWebhookConfigurationAdapterObjectType)
	if err != nil {
		return nil, err
	}

	castedObjects := make(map[string]*admissionregistrationV1beta1.ValidatingWebhookConfiguration, len(objects))
	for key, object := range objects {
		casted, ok := object.(*admissionregistrationV1beta1.ValidatingWebhookConfiguration)
		if !ok {
			return nil, fmt.Errorf("unable convert object: %w", registry.ErrIncompatibleType)
		}
		castedObjects[key] = casted
	}
	return castedObjects, nil
}

// GetGraphNode returns the node value representing a *admissionregistrationV1beta1.ValidatingWebhookConfiguration
func (this *ValidatingWebhookConfigurationAdapter) GetGraphNode(statefulGraph registry.StatefulGraph, name string) (registry.Node, error) {
	return statefulGraph.GetNode(ValidatingWebhookConfigurationAdapterObjectType, name)
}

func (this *ValidatingWebhookConfigurationAdapter) AddStyledNode(graph registry.StatefulGraph, obj registry.RuntimeObject) (registry.Node, error) {
	resource, err := this.CastObject(obj)
	if err != nil {
		return nil, err
	}

	name := fmt.Sprintf("%s.%s~%s", resource.APIVersion, resource.Kind, resource.Name)
	return graph.AddStyledNode(this.GetType(), obj, name, resource.Name, "icons/unknown.svg")
}

// init registers ValidatingWebhookConfigurationAdapter
func init() {
	registry.MustRegister(&ValidatingWebhookConfigurationAdapter{
		registry.NewAdapter(
			ValidatingWebhookConfigurationAdapterObjectType,
			"icons/unknown.svg",
		),
	})
}
